1) Full Name: YL


2) Student ID: XXX


3) Platform (Ubuntu version): 32-bit XUbuntu 16.04.7


4) What I have done in the assignment:
In this assignment, I wrote three .cpp files to establish a UDP model that can realize the Student Department and ID search system required by the assignment, as well as a makefile. Skeleton code was given by reference material: https://beej.us/guide/bgnet/html, which is a simple UDP connection. On top of that I first designed a series of functions to realize server-end information storage and retrieval, then added corresponding receive/send function to each server end. Furthermore, while loops were added to realize continuous operations on message exchanging.


5) What my code files are and what each one of them does:
(1) - servermain.cpp: establishes a server-end socket that can continuously receive and send datagrams over the UDP connection. It takes in user input as a department name, send it to the corresponding server and wait for the message to be sent to itself and print the received message. Apart from that, a few informational messages will be printed.

(2) - serverA.cpp: establishes a server-end socket that after UDP connection has been setup, can look up information in its database and send query results to the main server. Apart from that, a few informational messages will be printed.

(3) - serverB.cpp: establishes a server-end socket that after UDP connection has been setup, can look up information in its database and send query results to the main server. Apart from that, a few informational messages will be printed.

(4) - makefile: makefile to compile the program.


6) The format of all the messages exchanged:
Messages being exchanged are called datagrams.
In terms of code implementation, messages were defined in the format of char, which was defined in ASICII. (During the sending/receiving process, the ASICII is converted to binary, and eventually to analog signals for physical transmission.)

7) Any idiosyncrasy of your project (It should say under what conditions the project fails, if any):
(1) My code follows all the assumptions written in the project assignment specs. Any condition other than those will trigger undefined behavior.
(2) When you type in "make", all the files will be compiled only (program will not run). To run serverA program, open a new terminal and type in "./serverA". To run serverB program, open a new terminal and type in "./serverB". To run the main server program, open a new terminal and type in "./servermain". To successfully run the wholel program, one must follow this order, namely, serverA -> serverB -> servermain.
(3) Please notice that since file names "serverA.txt" & "serverB.txt" were hardcoded to the program, one should always make sure these files exist in the same folder of the code file. Otherwise program will fail to work as expected.
(4) The assumption is that users are not allowed to put any parameter or value or string or character as a commandline argument. Doing so will cause undefined behavior.


8) Reused Code: Did you use code from anywhere for your project? If not, say so. If so, say what functions and where they're from. (Also identify this with a comment in the source code):
Yes.
Starter code is given by "https://beej.us/guide/bgnet/html/".
Function split() is adapted from code provided by "https://stackoverflow.com/questions/14265581/parse-split-a-string-in-c-using-string-delimiter-standard-c".